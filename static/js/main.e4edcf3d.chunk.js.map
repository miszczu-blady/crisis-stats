{"version":3,"sources":["app/constants.ts","app/components/organisms/chart.tsx","app/components/atoms/table.tsx","app/utils.ts","app/components/organisms/dashboard.tsx","app/components/pages/ceidg.tsx","app/components/organisms/estate-chart.tsx","app/components/pages/estates.tsx","app/components/pages/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CHART_COLORS","ESTATE_CHART_COLORS","ARROW_COLORS","OChart","data","title","getCurrentSize","window","innerWidth","useState","size","setSize","useEffect","addEventListener","_","gutter","span","width","height","layout","stroke","strokeDasharray","dataKey","type","yAxisId","justify","xs","lg","dataSource","columns","key","dataIndex","pagination","summary","pageData","ATable","zip","setA","setB","elementA","elementB","name","getLastDays","days","end","item","begin","slice","OChartCell","OStatsCell","count2020","count2019","diff","color","prefix","ArrowUpOutlined","ArrowDownOutlined","percentage","value","valueStyle","precision","suffix","OTableCell","ODashboard","dataClosedSuspended","dataClosed","dataSuspensed","dataOpenedReopened","dataOpened","dataReopened","style","textAlign","href","Content","Layout","Sider","Ceidg","selectedItem","setSelectedItem","breakpoint","collapsedWidth","mode","selectedKeys","onSelect","Item","minHeight","padding","getData","closed","suspended","opened","reopened","OEstateChart","dataPrices","dataCount","titlePrices","titleCount","unit","domain","Estates","defaultOpenKeys","SubMenu","wynajemMieszkanieWroclawCeny","wynajemMieszkanieWroclawLiczba","sprzedazMieszkaniePierwotnyWroclawCeny","sprzedazMieszkaniePierwotnyWroclawLiczba","sprzedazMieszkanieWtornyWroclawCeny","sprzedazMieszkanieWtornyWroclawLiczba","Header","MainPage","location","className","theme","pathname","to","path","component","exact","render","MainPageWithRouter","withRouter","props","App","basename","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"m7NAAaA,EAAe,CAC1B,UACA,WAGWC,EAAsB,CACjC,MACA,OACA,QACA,SAGWC,EACJ,UADIA,EAEL,UAFKA,EAGN,UCADC,EAAoB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAE3BC,EAAiB,iBAAyB,CAC9CC,OAAOC,WALQ,IAKsC,GAApBD,OAAOC,WAAuC,GAApBD,OAAOC,WAClED,OAAOC,WANQ,IAMsC,GAApBD,OAAOC,WAAmB,GAA0B,GAApBD,OAAOC,WAAmB,KAJhD,EAMrBC,mBAA2BH,KANN,mBAMtCI,EANsC,KAMhCC,EANgC,KAY7C,OALAC,qBAAU,WAERL,OAAOM,iBAAiB,SAAUC,YADP,kBAAMH,EAAQL,OACwB,SAIjE,kBAAC,IAAD,CAAMD,MAAOA,GACX,kBAAC,IAAD,CAAKU,OAAQ,CAAC,EAAG,KACf,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,CACEC,MAAOP,EAAK,GACZQ,OAAQR,EAAK,GACbS,OAAO,aACPf,KAAMA,GAEN,kBAAC,IAAD,CAAegB,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,KAAK,WACZ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMA,KAAK,WAAWD,QAAQ,OAAOF,OAAQpB,EAAa,GAAIwB,QAAS,IACvE,kBAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,OAAOF,OAAQpB,EAAa,GAAIwB,QAAS,OAK7E,kBAAC,IAAD,CAAKC,QAAQ,SAASV,OAAQ,CAAC,EAAG,KAChC,kBAAC,IAAD,CAAKW,GAAI,GAAIC,GAAI,IACf,kBAAC,IAAD,CACEC,WAAYxB,EACZyB,QAAS,CACP,CAACC,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,QACxC,CAACD,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,QACxC,CAACD,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,SAE1CC,YAAY,EACZtB,KAAK,QACLuB,QAAS,SAACC,GAAD,OACP,4BACE,4BAAI,0CACJ,4BAAI,gCAAUpB,QAAQoB,EAAU,UAChC,4BAAI,gCAAUpB,QAAQoB,EAAU,kB,2BC1DnCC,EAAkC,SAAC,GAAD,IAC7C/B,EAD6C,EAC7CA,KAD6C,OAG7C,kBAAC,IAAD,CACEwB,WAAYxB,EACZyB,QAAS,CACP,CAACC,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,QACxC,CAACD,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,QACxC,CAACD,IAAK,OAAQzB,MAAO,OAAQ0B,UAAW,SAE1CC,YAAY,EACZtB,KAAK,QACLuB,QAAS,SAACC,GAAD,OACP,4BACE,4BAAI,0CACJ,4BAAI,gCAAUpB,QAAQoB,EAAU,UAChC,4BAAI,gCAAUpB,QAAQoB,EAAU,e,mCCnB3BE,EAAM,SAACC,EAAiBC,GAAlB,OACjBxB,UAAUuB,EAAMC,GAAM,SAACC,EAAUC,GAAX,MAAyB,CAC/CC,KAAMF,EAASE,KACf,KAAQF,EAAS,MAAUC,EAAS,MACpC,KAAQD,EAAS,OAAWC,EAAS,MACnCD,EAAS,MAAUC,EAAS,MAC3BD,EAAS,OAAWC,EAAS,WAIrBE,EAAc,SAACtC,EAAiBuC,GAC3C,IAAMC,EAAM9B,gBAAgBV,GAAM,SAAAyC,GAAI,OAAqB,OAAjBA,EAAK,SAC/C,IAAKD,EAAK,MAAO,GACjB,IAAME,EAAQF,GAAOD,EAAO,EAAIC,EAAMD,EAAO,EAAI,EACjD,OAAOvC,EAAK2C,MAAMD,EAAOF,EAAM,ICI3BI,EAAwB,SAAC,GAExB,IADL5C,EACI,EADJA,KAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEa,MAAO,IACPC,OAAQ,IACRd,KAAMA,GAEN,kBAAC,IAAD,CAAegB,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,KAAK,WACZ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMA,KAAK,WAAWD,QAAQ,OAAOF,OAAQpB,EAAa,GAAIwB,QAAS,IACvE,kBAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,OAAOF,OAAQpB,EAAa,GAAIwB,QAAS,OAMzEyB,EAAwB,SAAC,GAExB,IADL7C,EACI,EADJA,KAEM8C,EAAYpC,QAAQV,EAAM,QAC1B+C,EAAYrC,QAAQV,EAAM,QAE1BgD,EAAOF,EAAYC,EACnBE,EAAQD,EAAO,EACjBlD,EACAkD,EAAO,EACLlD,EACAA,EAEAoD,EAASF,EAAO,EAClB,kBAACG,EAAA,EAAD,MACAH,EAAO,EACL,kBAACI,EAAA,EAAD,MACA,KAEAC,EAAaN,EAAYD,GAC1BC,EAAYD,GAAaC,EAAY,KACrCD,EAAYC,GAAaA,EAAY,IAE1C,OACE,kBAAC,IAAD,CAAK1B,QAAQ,SAASV,OAAQ,IAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEV,MAAM,OACNqD,MAAOP,EACPQ,WAAY,CAAEN,MAAOrD,EAAa,OAItC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAM,OACNqD,MAAOR,EACPS,WAAY,CAAEN,MAAOrD,EAAa,OAItC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAM,SACNqD,MAAOD,EACPG,UAAW,EACXD,WAAY,CAAEN,SACdC,OAAQA,EACRO,OAAO,SAOXC,EAAwB,SAAC,GAExB,IADL1D,EACI,EADJA,KAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,KAAM,IACT,kBAAC,EAAD,CAAQZ,KAAMA,OAMhB2D,EAAiB,WACrB,IAAMC,EAAsBtB,EAAYN,EAAI6B,EAAYC,GAAgB,GAClEC,EAAqBzB,EAAYN,EAAIgC,EAAYC,GAAe,GAEtE,OACE,oCACE,kBAAC,IAAD,CAAKtD,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKY,GAAI,GAAID,GAAI,IACf,kBAAC,IAAD,CAAMrB,MAAM,iDACV,kBAAC,EAAD,CAAYD,KAAM4D,IAClB,kBAAC,EAAD,CAAY5D,KAAM4D,IAClB,kBAAC,EAAD,CAAY5D,KAAM4D,MAGtB,kBAAC,IAAD,CAAKrC,GAAI,GAAID,GAAI,IACf,kBAAC,IAAD,CAAMrB,MAAM,mDACV,kBAAC,EAAD,CAAYD,KAAM+D,IAClB,kBAAC,EAAD,CAAY/D,KAAM+D,IAClB,kBAAC,EAAD,CAAY/D,KAAM+D,OAIxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxC,GAAI,IACP,kBAAC,IAAD,CAAM2C,MAAO,CAACC,UAAW,UAAzB,2BAEE,uBAAGC,KAAK,+CAAR,gBAFF,YAIE,uBAAGA,KAAK,uBAAR,oBC7HJC,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAEJC,EAAY,WAAO,IAAD,EAEWnE,mBAAqC,aAFhD,mBAEtBoE,EAFsB,KAERC,EAFQ,KAuB7B,OACE,kBAAC,IAAD,KACE,kBAACH,EAAD,CACEI,WAAW,KACXC,eAAe,IACf/D,MAAO,KAEP,kBAAC,IAAD,CACEgE,KAAK,SACLC,aAAc,CAACL,GACfP,MAAO,CAAEpD,OAAQ,QACjBiE,SAAU,gBAAGrD,EAAH,EAAGA,IAAH,OAAagD,EAAgBhD,KAEvC,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,aAAf,aACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,UAAf,mBACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,aAAf,cACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,UAAf,sBACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,YAAf,aACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,oBAAf,+BACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,mBAAf,oCAGJ,kBAAC2C,EAAD,CAASH,MAAO,CAAEe,UAAW,IAAKC,QAAS,KAEtB,cAAjBT,EACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQzE,KApCF,SAACyE,GACf,MAAqB,WAAjBA,EAAkCZ,EACZ,cAAjBY,EAAqCX,EACpB,qBAAjBW,EAA4CzC,EAAI6B,EAAYC,GAC3C,WAAjBW,EAAkCT,EACjB,aAAjBS,EAAoCR,EACnB,oBAAjBQ,EAA2CzC,EAAIgC,EAAYC,GAC7D,GA6BekB,CAAQV,GAAexE,MA7ChC,CACbmF,OAAQ,8EACRC,UAAW,yEACXC,OAAQ,iFACRC,SAAU,wEACV,mBAAoB,6FACpB,kBAAmB,gGAuCwCd,QC9CzDe,EAA0B,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAE/D1F,EAAiB,iBAAyB,CAC9CC,OAAOC,WALQ,IAKsC,GAApBD,OAAOC,WAAuC,GAApBD,OAAOC,WAClED,OAAOC,WANQ,IAMsC,GAApBD,OAAOC,WAAmB,GAA0B,GAApBD,OAAOC,WAAmB,KAJP,EAM9DC,mBAA2BH,KANmC,mBAM/EI,EAN+E,KAMzEC,EANyE,KAYtF,OALAC,qBAAU,WAERL,OAAOM,iBAAiB,SAAUC,YADP,kBAAMH,EAAQL,OACwB,SAIjE,oCACA,kBAAC,IAAD,CAAMD,MAAO0F,GACX,kBAAC,IAAD,CAAKhF,OAAQ,CAAC,EAAG,KACf,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,CACEC,MAAOP,EAAK,GACZQ,OAAQR,EAAK,GACbS,OAAO,aACPf,KAAMyF,GAEN,kBAAC,IAAD,CAAezE,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,KAAK,SAAS0E,KAAK,UAAKC,OAAQ,CAAC,iBAAkB,UAC1D,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMzD,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,4BAAuBlB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,QAMrH,kBAAC,IAAD,CAAMnB,MAAO2F,GACX,kBAAC,IAAD,CAAKjF,OAAQ,CAAC,EAAG,KACf,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,CACEC,MAAOP,EAAK,GACZQ,OAAQR,EAAK,GACbS,OAAO,aACPf,KAAM0F,GAEN,kBAAC,IAAD,CAAe1E,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,KAAK,WACZ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMkB,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,aAAalB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,IACnG,kBAAC,IAAD,CAAMiB,KAAK,4BAAuBlB,KAAK,WAAWD,QAAQ,UAAUF,OAAQnB,EAAoB,GAAIuB,QAAS,U,sDC3DjHiD,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAOJwB,EAAc,WAAO,IAAD,EAES1F,mBAA6B,8BAFtC,mBAExBoE,EAFwB,KAEVC,EAFU,KAI/B,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEC,WAAW,KACXC,eAAe,IACf/D,MAAO,KAEP,kBAAC,IAAD,CACEgE,KAAK,SACLC,aAAc,CAACL,GACfP,MAAO,CAAEpD,OAAQ,QACjBiE,SAAU,gBAAGrD,EAAH,EAAGA,IAAH,OAAagD,EAAgBhD,IACvCsE,gBAAiB,CAAC,YAElB,kBAAC,IAAKC,QAAN,CAAcvE,IAAI,UAAUzB,MAAM,6BAChC,kBAAC,IAAK+E,KAAN,CAAWtD,IAAI,8BAAf,WACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,yCAAf,6BACA,kBAAC,IAAKsD,KAAN,CAAWtD,IAAI,sCAAf,gCAIN,kBAAC,EAAD,CAASwC,MAAO,CAAEe,UAAW,IAAKC,QAAS,KAEtB,+BAAjBT,GACA,kBAAC,EAAD,CACEgB,WAAYS,EACZR,UAAWS,EACXR,YAAY,8CACZC,WAAW,qEAII,0CAAjBnB,GACA,kBAAC,EAAD,CACEgB,WAAYW,EACZT,YAAY,uEACZD,UAAWW,EACXT,WAAW,uFAII,uCAAjBnB,GACA,kBAAC,EAAD,CACEgB,WAAYa,EACZZ,UAAWa,EACXZ,YAAY,oEACZC,WAAW,uFCvDfY,EAAoBlC,IAApBkC,OAAQnC,EAAYC,IAAZD,QAEVoC,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,kBAAC,IAAD,KACE,kBAACF,EAAD,CAAQG,UAAU,UAChB,kBAAC,IAAD,CACEC,MAAM,OACN/B,KAAK,aACLC,aAAc,CAAC4B,EAASG,WAExB,kBAAC,IAAK7B,KAAN,CAAWtD,IAAI,UACb,kBAAC,IAAD,CAAMoF,GAAG,UAAT,UAEF,kBAAC,IAAK9B,KAAN,CAAWtD,IAAI,YACb,kBAAC,IAAD,CAAMoF,GAAG,YAAT,yBAMN,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWxC,IAChC,kBAAC,IAAD,CAAOuC,KAAK,WAAWC,UAAWjB,IAClC,kBAAC,IAAD,CAAOkB,OAAK,EAACF,KAAK,IAAIG,OAAQ,kBAAM,kBAAC,IAAD,CAAUJ,GAAG,iBAMnDK,GAAqBC,aAAW,SAAAC,GAAK,OAAI,kBAAC,EAAaA,M,cC3B9CC,OARf,WACE,OACC,kBAAC,IAAD,CAAQC,SAAS,kBACf,kBAACJ,GAAD,QCAeK,QACW,cAA7BrH,OAAOuG,SAASe,UAEe,UAA7BtH,OAAOuG,SAASe,UAEhBtH,OAAOuG,SAASe,SAASC,MACvB,2DCZNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e4edcf3d.chunk.js","sourcesContent":["export const CHART_COLORS = [\n  '#5154dd',\n  '#ffa800',\n]\n\nexport const ESTATE_CHART_COLORS = [\n  'red',\n  'blue',\n  'green',\n  'brown',\n]\n\nexport const ARROW_COLORS = {\n  GREEN: '#4ba000',\n  GREY: '#4f4f4f',\n  RED: '#cf1322',\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport { Table, Row, Col, Card } from 'antd';\nimport * as _ from 'lodash';\n\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line, YAxis, Legend } from 'recharts';\n\nimport { CHART_COLORS } from '../../constants'\n\ninterface Props {\n  data: DataRow[]\n  title: string\n}\n\nconst BREAKPOINT = 992;\n\nconst OChart: FC<Props> = ({ data, title }) => {\n\n  const getCurrentSize = (): [number, number] => ([\n    window.innerWidth > BREAKPOINT ? window.innerWidth * 0.7 : window.innerWidth * 0.9,\n    window.innerWidth > BREAKPOINT ? window.innerWidth * 0.7 * 0.5 : window.innerWidth * 0.9 * 0.5\n  ])\n  const [size, setSize] = useState<[number, number]>(getCurrentSize())\n  useEffect(() => {\n    const handleWindowResize = () => setSize(getCurrentSize())\n    window.addEventListener('resize', _.debounce(handleWindowResize, 300));\n  })\n\n  return (\n    <Card title={title}>\n      <Row gutter={[0, 32]}>\n        <Col span={24}>\n          <LineChart\n            width={size[0]}\n            height={size[1]}\n            layout=\"horizontal\"\n            data={data}\n          >\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n            <XAxis dataKey=\"name\" />\n            <YAxis type=\"number\" />\n            <Legend />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"2019\" stroke={CHART_COLORS[0]} yAxisId={0} />\n            <Line type=\"monotone\" dataKey=\"2020\" stroke={CHART_COLORS[1]} yAxisId={0} />\n          </LineChart>\n        </Col>\n      </Row>\n\n      <Row justify=\"center\" gutter={[0, 32]}>\n        <Col xs={24} lg={12}>\n          <Table\n            dataSource={data}\n            columns={[\n              {key: 'name', title: 'Data', dataIndex: 'name'},\n              {key: '2019', title: '2019', dataIndex: '2019'},\n              {key: '2020', title: '2020', dataIndex: '2020'},\n            ]}\n            pagination={false}\n            size=\"small\"\n            summary={(pageData) => (\n              <tr>\n                <td><strong>Suma:</strong></td>\n                <td><strong>{ _.sumBy(pageData, '2019') }</strong></td>\n                <td><strong>{ _.sumBy(pageData, '2020') }</strong></td>\n              </tr>\n            )}\n          />\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport { OChart }\n","import React, { FC } from 'react';\nimport { Table } from 'antd';\nimport * as _ from 'lodash';\n\n\nexport const ATable: FC<{ data: DataRow[] }> = ({\n  data\n}) => (\n  <Table\n    dataSource={data}\n    columns={[\n      {key: 'name', title: 'Data', dataIndex: 'name'},\n      {key: '2019', title: '2019', dataIndex: '2019'},\n      {key: '2020', title: '2020', dataIndex: '2020'},\n    ]}\n    pagination={false}\n    size=\"small\"\n    summary={(pageData) => (\n      <tr>\n        <td><strong>Suma:</strong></td>\n        <td><strong>{ _.sumBy(pageData, '2019') }</strong></td>\n        <td><strong>{ _.sumBy(pageData, '2020') }</strong></td>\n      </tr>\n    )}\n  />\n);\n","import * as _ from 'lodash';\n\nexport const zip = (setA: DataRow[], setB: DataRow[]) =>\n  _.zipWith(setA, setB, (elementA, elementB) => ({\n  name: elementA.name,\n  '2019': elementA['2019'] + elementB['2019'],\n  '2020': elementA['2020'] && elementB['2020']\n  ? elementA['2020'] + elementB['2020']\n  : (elementA['2020'] || elementB['2020'])\n}));\n\n\nexport const getLastDays = (data: DataRow[], days: number) => {\n  const end = _.findLastIndex(data, item => item['2020'] !== null)\n  if (!end) return []\n  const begin = end >= days - 1 ? end - days + 1 : 0\n  return data.slice(begin, end + 1)\n}\n\n","import React, { FC } from 'react';\nimport { Row, Col, Card, Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport * as _ from 'lodash';\n\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line, YAxis, Legend } from 'recharts';\n\nimport { ATable } from '../atoms/table';\nimport dataClosed from '../../../data/ceidg/closed.json';\nimport dataSuspensed from '../../../data/ceidg/suspended.json';\nimport dataOpened from '../../../data/ceidg/opened.json';\nimport dataReopened from '../../../data/ceidg/reopened.json';\n\nimport { ARROW_COLORS, CHART_COLORS } from '../../constants'\nimport { getLastDays, zip } from '../../utils'\n\ninterface Props {\n  data: DataRow[]\n}\n\nconst OChartCell: FC<Props> = ({\n  data\n}) => {\n  return (\n    <Row>\n      <LineChart\n        width={500}\n        height={250}\n        data={data}\n      >\n        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n        <XAxis dataKey=\"name\" />\n        <YAxis type=\"number\" />\n        <Legend />\n        <Tooltip />\n        <Line type=\"monotone\" dataKey=\"2019\" stroke={CHART_COLORS[0]} yAxisId={0} />\n        <Line type=\"monotone\" dataKey=\"2020\" stroke={CHART_COLORS[1]} yAxisId={0} />\n      </LineChart>\n    </Row>\n  );\n}\n\nconst OStatsCell: FC<Props> = ({\n  data\n}) => {\n  const count2020 = _.sumBy(data, \"2020\")\n  const count2019 = _.sumBy(data, \"2019\")\n\n  const diff = count2020 - count2019\n  const color = diff > 0\n    ? ARROW_COLORS.GREEN\n    : diff < 0\n      ? ARROW_COLORS.RED\n      : ARROW_COLORS.GREY\n\n  const prefix = diff > 0\n    ? <ArrowUpOutlined />\n    : diff < 0\n      ? <ArrowDownOutlined />\n      : null\n\n  const percentage = count2019 > count2020\n    ? (count2019 - count2020) / count2019 * 100\n    : (count2020 - count2019) / count2019 * 100\n\n  return (\n    <Row justify=\"center\" gutter={64}>\n      <Col>\n        <Statistic\n          title=\"2019\"\n          value={count2019}\n          valueStyle={{ color: CHART_COLORS[0] }}\n        />\n      </Col>\n\n      <Col>\n        <Statistic\n          title=\"2020\"\n          value={count2020}\n          valueStyle={{ color: CHART_COLORS[1] }}\n        />\n      </Col>\n\n      <Col>\n        <Statistic\n          title=\"Zmiana\"\n          value={percentage}\n          precision={1}\n          valueStyle={{ color }}\n          prefix={prefix}\n          suffix=\"%\"\n        />\n      </Col>\n    </Row>\n  );\n}\n\nconst OTableCell: FC<Props> = ({\n  data\n}) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <ATable data={data} />\n      </Col>\n    </Row>\n  );\n}\n\nconst ODashboard: FC = () => {\n  const dataClosedSuspended = getLastDays(zip(dataClosed, dataSuspensed), 7);\n  const dataOpenedReopened = getLastDays(zip(dataOpened, dataReopened), 7);\n\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col lg={12} xs={24}>\n          <Card title=\"Zakończone i zawieszone (ostatnie 7 dni)\">\n            <OStatsCell data={dataClosedSuspended} />\n            <OChartCell data={dataClosedSuspended} />\n            <OTableCell data={dataClosedSuspended} />\n          </Card>\n        </Col>\n        <Col lg={12} xs={24}>\n          <Card title=\"Założone i wznowione (ostatnie 7 dni)\">\n            <OStatsCell data={dataOpenedReopened} />\n            <OChartCell data={dataOpenedReopened} />\n            <OTableCell data={dataOpenedReopened} />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={24}>\n          <Card style={{textAlign: 'right'}}>\n            Źródło:&nbsp;\n            <a href=\"https://prod.ceidg.gov.pl/ceidg.cms.engine/\">ceidg.gov.pl</a>\n            &nbsp;|&nbsp;\n            <a href=\"https://dane.gov.pl\">dane.gov.pl</a>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\n\nexport { ODashboard }\n","import React, { FC, useState } from 'react';\nimport { Layout, Menu } from 'antd';\n\nimport { OChart } from '../organisms/chart';\nimport { ODashboard } from '../organisms/dashboard';\nimport { zip } from '../../utils';\n\nimport dataClosed from '../../../data/ceidg/closed.json';\nimport dataSuspensed from '../../../data/ceidg/suspended.json';\nimport dataOpened from '../../../data/ceidg/opened.json';\nimport dataReopened from '../../../data/ceidg/reopened.json';\n\nconst { Content, Sider } = Layout;\n\nexport const Ceidg: FC = () => {\n\n  const [selectedItem, setSelectedItem] = useState<SelectedItem | 'dashboard'>('dashboard')\n\n  const titles = {\n    closed: 'Liczba zakończonych działalności gospodarczych 2020 vs. 2019',\n    suspended: 'Liczba zawieszonych działalności gospodarczych 2020 vs. 2019',\n    opened: 'Liczba założonych działalności gospodarczych 2020 vs. 2019',\n    reopened: 'Liczba wznowionych działalności gospodarczych 2020 vs. 2019',\n    \"closed-suspended\": 'Liczba zakończonych i zawieszonych działalności gospodarczych 2020 vs. 2019',\n    \"opened-reopened\": 'Liczba założonych i wznowionych działalności gospodarczych 2020 vs. 2019',\n  }\n\n  const getData = (selectedItem: SelectedItem) => {\n    if (selectedItem === 'closed') return dataClosed;\n    else if (selectedItem === 'suspended') return dataSuspensed;\n    else if (selectedItem === 'closed-suspended') return zip(dataClosed, dataSuspensed);\n    else if (selectedItem === 'opened') return dataOpened;\n    else if (selectedItem === 'reopened') return dataReopened;\n    else if (selectedItem === 'opened-reopened') return zip(dataOpened, dataReopened);\n    return []\n  }\n\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        width={200}\n      >\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[selectedItem]}\n          style={{ height: '100%' }}\n          onSelect={({ key }) => setSelectedItem(key as SelectedItem)}\n        >\n          <Menu.Item key=\"dashboard\">Dashboard</Menu.Item>\n          <Menu.Item key=\"closed\">Zakończone</Menu.Item>\n          <Menu.Item key=\"suspended\">Zawieszone</Menu.Item>\n          <Menu.Item key=\"opened\">Założone</Menu.Item>\n          <Menu.Item key=\"reopened\">Wznowione</Menu.Item>\n          <Menu.Item key=\"closed-suspended\">Zamknięte & Zawieszone</Menu.Item>\n          <Menu.Item key=\"opened-reopened\">Założone & Wznowione</Menu.Item>\n        </Menu>\n      </Sider>\n      <Content style={{ minHeight: 680, padding: 20 }}>\n\n        { selectedItem === 'dashboard'\n          ? <ODashboard />\n          : <OChart data={getData(selectedItem)} title={titles[selectedItem]}/>\n        }\n      </Content>\n    </Layout>\n  );\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'antd';\nimport * as _ from 'lodash';\n\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line, YAxis, Legend } from 'recharts';\n\nimport { ESTATE_CHART_COLORS } from '../../constants'\n\ninterface Props {\n  dataPrices: any[]\n  dataCount: any[]\n  titlePrices: string\n  titleCount: string\n}\n\nconst BREAKPOINT = 992;\n\nconst OEstateChart: FC<Props> = ({ dataPrices, dataCount, titlePrices, titleCount }) => {\n\n  const getCurrentSize = (): [number, number] => ([\n    window.innerWidth > BREAKPOINT ? window.innerWidth * 0.7 : window.innerWidth * 0.9,\n    window.innerWidth > BREAKPOINT ? window.innerWidth * 0.7 * 0.5 : window.innerWidth * 0.9 * 0.5\n  ])\n  const [size, setSize] = useState<[number, number]>(getCurrentSize())\n  useEffect(() => {\n    const handleWindowResize = () => setSize(getCurrentSize())\n    window.addEventListener('resize', _.debounce(handleWindowResize, 300));\n  })\n\n  return (\n    <>\n    <Card title={titlePrices}>\n      <Row gutter={[0, 32]}>\n        <Col span={24}>\n          <LineChart\n            width={size[0]}\n            height={size[1]}\n            layout=\"horizontal\"\n            data={dataPrices}\n          >\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n            <XAxis dataKey=\"name\" />\n            <YAxis type=\"number\" unit=\"zł\" domain={['dataMin - 1000', 'auto']} />\n            <Legend />\n            <Tooltip />\n            <Line name=\"1-pokojowe\" type=\"monotone\" dataKey=\"rooms_1\" stroke={ESTATE_CHART_COLORS[0]} yAxisId={0} />\n            <Line name=\"2-pokojowe\" type=\"monotone\" dataKey=\"rooms_2\" stroke={ESTATE_CHART_COLORS[1]} yAxisId={0} />\n            <Line name=\"3-pokojowe\" type=\"monotone\" dataKey=\"rooms_3\" stroke={ESTATE_CHART_COLORS[2]} yAxisId={0} />\n            <Line name=\"4-pokojowe i większe\" type=\"monotone\" dataKey=\"rooms_4\" stroke={ESTATE_CHART_COLORS[3]} yAxisId={0} />\n          </LineChart>\n        </Col>\n      </Row>\n    </Card>\n\n    <Card title={titleCount}>\n      <Row gutter={[0, 32]}>\n        <Col span={24}>\n          <LineChart\n            width={size[0]}\n            height={size[1]}\n            layout=\"horizontal\"\n            data={dataCount}\n          >\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n            <XAxis dataKey=\"name\" />\n            <YAxis type=\"number\" />\n            <Legend />\n            <Tooltip />\n            <Line name=\"1-pokojowe\" type=\"monotone\" dataKey=\"rooms_1\" stroke={ESTATE_CHART_COLORS[0]} yAxisId={0} />\n            <Line name=\"2-pokojowe\" type=\"monotone\" dataKey=\"rooms_2\" stroke={ESTATE_CHART_COLORS[1]} yAxisId={0} />\n            <Line name=\"3-pokojowe\" type=\"monotone\" dataKey=\"rooms_3\" stroke={ESTATE_CHART_COLORS[2]} yAxisId={0} />\n            <Line name=\"4-pokojowe i większe\" type=\"monotone\" dataKey=\"rooms_4\" stroke={ESTATE_CHART_COLORS[3]} yAxisId={0} />\n          </LineChart>\n        </Col>\n      </Row>\n    </Card>\n    </>\n  );\n}\n\nexport { OEstateChart }\n","import React, { FC, useState } from 'react';\nimport { Layout, Menu } from 'antd';\n\nimport { OEstateChart } from '../organisms/estate-chart';\n\nimport wynajemMieszkanieWroclawCeny from '../../../data/estates/wynajem-mieszkanie-wroclaw-ceny.json';\nimport wynajemMieszkanieWroclawLiczba from '../../../data/estates/wynajem-mieszkanie-wroclaw-liczba.json';\nimport sprzedazMieszkaniePierwotnyWroclawCeny from '../../../data/estates/sprzedaz-mieszkanie-pierwotny-wroclaw-ceny.json';\nimport sprzedazMieszkaniePierwotnyWroclawLiczba from '../../../data/estates/sprzedaz-mieszkanie-pierwotny-wroclaw-liczba.json';\nimport sprzedazMieszkanieWtornyWroclawCeny from '../../../data/estates/sprzedaz-mieszkanie-wtorny-wroclaw-ceny.json';\nimport sprzedazMieszkanieWtornyWroclawLiczba from '../../../data/estates/sprzedaz-mieszkanie-wtorny-wroclaw-liczba.json';\n\nconst { Content, Sider } = Layout;\n\ntype SelectedEstateItem = |\n  'wynajem-mieszkanie-wroclaw' |\n  'sprzedaz-mieszkanie-pierwotny-wroclaw' |\n  'sprzedaz-mieszkanie-wtorny-wroclaw'\n\nexport const Estates: FC = () => {\n\n  const [selectedItem, setSelectedItem] = useState<SelectedEstateItem>('wynajem-mieszkanie-wroclaw')\n\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        width={200}\n      >\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[selectedItem]}\n          style={{ height: '100%' }}\n          onSelect={({ key }) => setSelectedItem(key as SelectedEstateItem)}\n          defaultOpenKeys={['wroclaw']}\n        >\n          <Menu.SubMenu key=\"wroclaw\" title=\"Mieszkania - Wrocław\">\n            <Menu.Item key='wynajem-mieszkanie-wroclaw'>Wynajem</Menu.Item>\n            <Menu.Item key='sprzedaz-mieszkanie-pierwotny-wroclaw'>Sprzedaż / pierwotny</Menu.Item>\n            <Menu.Item key='sprzedaz-mieszkanie-wtorny-wroclaw'>Sprzedaż / wtórny</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n      <Content style={{ minHeight: 680, padding: 20 }}>\n\n        { selectedItem === 'wynajem-mieszkanie-wroclaw' && (\n          <OEstateChart\n            dataPrices={wynajemMieszkanieWroclawCeny}\n            dataCount={wynajemMieszkanieWroclawLiczba}\n            titlePrices='Wrocław - Wynajem mieszkań - Cena'\n            titleCount='Wrocław - Wynajem mieszkań - Liczba ogłoszeń'\n          />\n        )}\n\n        { selectedItem === 'sprzedaz-mieszkanie-pierwotny-wroclaw' && (\n          <OEstateChart\n            dataPrices={sprzedazMieszkaniePierwotnyWroclawCeny}\n            titlePrices='Wrocław - Sprzedaż mieszkań (pierwotny) - Cena za mkw'\n            dataCount={sprzedazMieszkaniePierwotnyWroclawLiczba}\n            titleCount='Wrocław - Sprzedaż mieszkań (pierwotny) - Liczba ogłoszeń'\n          />\n        )}\n\n        { selectedItem === 'sprzedaz-mieszkanie-wtorny-wroclaw' && (\n          <OEstateChart\n            dataPrices={sprzedazMieszkanieWtornyWroclawCeny}\n            dataCount={sprzedazMieszkanieWtornyWroclawLiczba}\n            titlePrices='Wrocław - Sprzedaż mieszkań (wtorny) - Ceny za mkw'\n            titleCount='Wrocław - Sprzedaż mieszkań (wtorny) - Liczba ogłoszeń'\n          />\n        )}\n\n      </Content>\n    </Layout>\n  );\n}\n","import React, { FC } from 'react';\nimport { Layout, Menu } from 'antd';\n\nimport {\n  Link,\n  withRouter,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Ceidg } from './ceidg';\nimport { Estates } from './estates';\n\n\nconst { Header, Content } = Layout;\n\nconst MainPage: FC<any> = ({ location }) => {\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          selectedKeys={[location.pathname]}\n        >\n          <Menu.Item key=\"/ceidg\">\n            <Link to=\"/ceidg\">CEIDG</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/estates\">\n            <Link to=\"/estates\">\n              Nieruchomości\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content>\n        <Route path=\"/ceidg\" component={Ceidg} />\n        <Route path=\"/estates\" component={Estates} />\n        <Route exact path=\"/\" render={() => <Redirect to=\"/ceidg\" />} />\n      </Content>\n    </Layout>\n  );\n}\n\nconst MainPageWithRouter = withRouter(props => <MainPage {...props} />);\n\nexport { MainPageWithRouter }\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { MainPageWithRouter } from './app/components/pages/main';\n\nimport './App.css';\nimport 'antd/dist/antd.css'\n\n\nfunction App() {\n  return (\n  \t<Router basename=\"/crisis-stats/\">\n    \t<MainPageWithRouter />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}